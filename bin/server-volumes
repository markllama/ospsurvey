#!/bin/env python
from __future__ import print_function
"""
Report the storage use of all systems in a cloud
"""

from collections import namedtuple
import json
import subprocess

def get_all_projects():
  project_string = subprocess.check_output("openstack project list -f json".split())
  project_records = json.loads(project_string)
  if len(project_records) == 0:
    return []

  ProjectClass = namedtuple(
    "ProjectClass",
    [p.replace(' ', '_') for p in project_records[0].keys()]
  )
  projects = [ProjectClass._make(p.values()) for p in project_records]
  return projects
  

if __name__ == "__main__":

  projects = get_all_projects()
  all_servers = {}

  # Get detailed instance information grouped by project.
  for project in projects:
    # servers[project['Name']] =

    # get the list of servers in each project
    server_list_string = subprocess.check_output("openstack server list -c Name -c ID -c Host --project {} -f json".format(project.Name).split())
    server_list = json.loads(server_list_string)

    # now get the information for each server in the project
    servers = []
    for server in server_list:
      server_name = server['Name']
      server_id = server['ID']
      detail_string = subprocess.check_output("openstack server show -f json {}".format(server_id).split())
      server_detail = json.loads(detail_string)
      servers.append(server_detail)

    all_servers[project.Name] = servers
    
  print(json.dumps(all_servers))
