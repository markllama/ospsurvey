#!/usr/bin/env python
from __future__ import print_function
"""
Query and compile subscription manager information:
  subscription status
  configuration
  consumed subscriptions
  enabled repos

TODO:
  If status returns non-zero, check for rhn config:
  /etc/sysconfig/rhn/*
"""

import datetime
import json
import platform
import sys


import ospsurvey.probes.software
import ospsurvey.probes.sm

if __name__ == "__main__":

  # what do we want to know about this report?
  # hostname
  # start time
  # end time
  
  record = {
    'metadata': {
      'host': platform.node(),
    }
  }

  start_time = datetime.datetime.now()
  
  # Get information on enabled repos regardless:
  # I gotta figure out how to mock the subprocess.check_output call
  repo_names = ospsurvey.probes.software.get_repo_list()
  repo_info = [ospsurvey.probes.software.get_repo_info(r) for r in repo_names]
  record['repos'] = {'yum': repo_info }

  record['updates'] = {}
  record['updates']['history'] = ospsurvey.probes.software.get_yum_history()
  record['updates']['packages'] = ospsurvey.probes.software.check_updates()
  record['updates']['cves'] = ospsurvey.probes.software.check_cves()


  sm = ospsurvey.probes.sm.SubscriptionManager()
  
  # check if subscribed by subscription manager
  if sm.subscribed():
  
    record['subscription-method'] = 'subscription-manager'
    record['sm'] = {}
    record['sm']['config'] = sm.config()
    record['sm']['status'] = sm.status()
  
    if record['sm']['status'] != 'Unsubscribed':
      record['sm']['consumed'] = sm.consumed()
      record['sm']['repos'] = sm.repos()
          
  elif ospsurvey.probes.software.rhn_check():
    record['subscription-method'] = 'rhn'
    rhn_config = ospsurvey.probes.software.get_rhn_config()
    record['config'] = rhn_config
    #rhn_status = get_rhn_status()

  else:
    record['subscription-method': 'none']

  end_time = datetime.datetime.now()
  record['metadata']['start'] = str(start_time)
  record['metadata']['duration'] = str(end_time - start_time)
  
  print(json.dumps(record))
  sys.exit(0)
